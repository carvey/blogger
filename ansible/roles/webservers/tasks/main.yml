---

- name: ensure github is a known host
  action: sshknownhosts host=github.com state=present

- name: checkout sites
  git:
    repo="{{ item.repo }}"
    dest="{{ item.dest }}/{{ item.name }}"
    accept_hostkey=yes
    update=yes
    key_file="/home/ubuntu/.ssh/id_rsa"
  with_items:
    sites

- name: remove unused app directories
  command: "rm -rf {{ root }}/{{ item.name }}"
  with_items:
    disabled
    root

- name: setup virtualenvs with requirements
  pip:
    virtualenv="{{ item.dest }}"
    requirements="{{ item.dest }}/{{ item.name }}/requirements/py_requirements.txt"
  with_items:
    sites

- name: add a static folder
  file:
    path={{ item.dest }}/static
    state=directory
  with_items:
    sites

- name: collect static files
  django_manage:
    command=collectstatic
    virtualenv={{ item.dest }}
    app_path={{ item.dest }}/{{ item.name }}
  with_items:
    sites

- name: add a media folder
  file:
    path={{ item.dest }}/{{ item.name }}/media
    state=directory
  with_items:
    sites

- name: install gunicorn
  pip:
    name="gunicorn"
    virtualenv="{{ item.dest }}"
  with_items:
    sites

- name: create gunicorn start script
  template: src=start_gunicorn.j2 dest={{ item.dest }}/bin/start_gunicorn mode=777
  with_items:
    sites

- name: set gunicorn script to executable
  file:
    path={{ item.dest }}/bin/start_gunicorn
    mode="0700"
  with_items:
    sites

- name: create the run folder to store the gunicorn communication sock
  file:
    path={{ item.dest }}/run
    state=directory
  with_items:
    sites

- name: assign permissions to the project folders
  file:
    path={{ item.dest }}/../{{ item.name }}
    state=directory
    mode="777"
    recurse=yes
  with_items:
    sites

- name: setup supervisor configs
  template:
    src=supervisor.conf.j2
    dest=/etc/supervisor/conf.d/{{ item.name }}.conf
  with_items:
    sites

- name: create supervisor logs folder
  file:
    path={{ item.dest }}/logs
    state=directory
  with_items:
    sites

- name: create supervisor logs file
  command: "touch {{ item.dest }}/logs/gunicorn_supervisor.log"
  args:
    creates: "{{ item.dest }}/logs/gunicorn_supervisor.log"
  with_items:
    sites

- name: supervisor - reread
  command: supervisorctl reread

- name: supervisor - update
  command: supervisorctl update

- name: ensure supervisor is working and reading all confs
  supervisorctl:
    name={{ item.name }}
    state=started
    config=/etc/supervisor/conf.d/{{ item.name }}.conf
  with_items:
    sites

- name: setup nginx confs
  template:
    src=nginx_config.conf.j2
    dest=/etc/nginx/sites-available/nginx_config.conf
  notify: restart nginx

- name: sym-link to sites-enabled
  file:
    src=/etc/nginx/sites-available/nginx_config.conf
    dest=/etc/nginx/sites-enabled/nginx_config.conf
    state=link
  notify: restart nginx